{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Name: 		Jakub Misterka\
ACCC Username: 	jmisterk\
UIC E-Mail: 		jmister2@uic.edu\
Project: 		Homework 1 - statsh.cpp\
\
Compile using g++ -o statsh statsh.cpp\
\
Can be run by either using ./statsh or exec ./statsh\
\
Useful Commands: \
stats - displays all commands used with their timings and PID's\
exit - exits, clears allocated memory, and prints history of commands, timings, PID's, and Shell statistics\
\
Command structure:\
Simple commands like ls and pwd and be run normally.\
\
Piped commands require spaces between the pipes.\
i.e. :		ls -a | sort\
This require the user to provide clean looking code to the console.\
(I was not aware that shells could take these commands without spaces as anytime you search for a piped command online the spaces are always present as well as in the examples in the Homework 1 pdf)\
\
IO redirection also requires a space between the commands/files and the ">" and "<" characters.\
i.e. : 		sort < randomTextFile > sortedTextFile\
\
Background Processes require that the "&" character is the last character on the line and also require a space between the "&" character and the command on the left.\
i.e. : 		sort < randomTextFile > sortedTextFile &\
\
All required features have been implemented and are working correctly.\
This shell does not provide error checking and requires proper input.\
\
The code is commented and each function has a description\
\
The stats are stored in a vector of structs and accessed throughout the program.\
\
Quick Note about parsing and why the spaces are necessary:\
In parsing the first thing checked is the background "&", then the input is broken up using strtok and separated by pipes and stored in an array, then each indices of that array is parsed for spaces and stored in an array, and finally it is sent to the fork/pipeline. This is very sequential parsing and commands are quickly stored into the vector of structs to be remembers for the stats and exit commands. Because strtok makes it easy to insert NULLS it makes it easy to separate each command if spaces are places between pipes, ioredirects, and background ampersands.\
}